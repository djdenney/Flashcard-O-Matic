{"ast":null,"code":"var _jsxFileName = \"/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"./utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n\n      try {\n        const response = await readDeck(deckId, abortController.signal);\n        setDeck({\n          Name: response.name,\n          Description: response.description\n        });\n      } catch (error) {\n        console.error('Something went wrong', error);\n      }\n\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, []);\n\n  function handleChange({\n    target\n  }) {\n    setDeck({ ...deck,\n      [target.name]: target.value\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    const response = await updateDeck({ ...deck\n    }, abortController.signal);\n    history.push(`/decks/${deckId}`);\n    return response;\n  }\n\n  async function handleCancel() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          name: \"name\",\n          onChange: handleChange,\n          type: \"text\",\n          value: updateDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          onChange: handleChange,\n          type: \"text\",\n          value: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCancel(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDeck, \"YJZz3Y1GMRLXlG1Pf+43JFNuMVA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/EditDeck.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","readDeck","updateDeck","EditDeck","deckId","history","deck","setDeck","fetchData","abortController","AbortController","response","signal","Name","name","Description","description","error","console","abort","handleChange","target","value","handleSubmit","event","preventDefault","push","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }from \"react\"\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport { readDeck, updateDeck } from \"./utils/api/index\"\n\nfunction EditDeck () {\n    const {deckId} = useParams()\n    const history = useHistory()\n    const [deck, setDeck] = useState({})\n\n    useEffect(() => {\n        async function fetchData() {\n            const abortController = new AbortController()\n            try {\n                const response = await readDeck(deckId, abortController.signal)\n                setDeck({\n                    Name: response.name,\n                    Description: response.description\n                })\n            } catch (error) {\n                console.error('Something went wrong', error)\n            }\n            return() => {\n                abortController.abort()\n            }\n        }\n        fetchData()\n    }, [])\n\n    \n    function handleChange({target}) {\n        setDeck({\n            ...deck,\n            [target.name]: target.value\n        })\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        const abortController = new AbortController()\n        const response = await updateDeck({...deck}, abortController.signal)\n        history.push(`/decks/${deckId}`)\n        return response\n    }\n\n    async function handleCancel() {\n        history.push(`/decks/${deckId}`)\n    }\n\n\n    return (\n        <div>\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\n                <li className=\"breadcrumb-item active\">New</li>\n            </ol>\n            <form onSubmit={handleSubmit}>\n                <h1>Create Deck</h1>\n                <label>\n                    Name:\n                    <input \n                        id=\"name\"\n                        name=\"name\"\n                        onChange={handleChange} \n                        type=\"text\"\n                        value={updateDeck.name}\n                    />\n                </label>\n                <label>\n                    Description:\n                    <textarea \n                        id=\"description\"\n                        name=\"description\"\n                        onChange={handleChange} \n                        type=\"text\"\n                        value={deck.description}\n                    />\n                </label>\n                <button onClick={() => handleCancel()}>Cancel</button>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditDeck"]},"metadata":{},"sourceType":"module"}