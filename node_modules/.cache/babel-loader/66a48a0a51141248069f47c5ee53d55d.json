{"ast":null,"code":"var _jsxFileName = \"/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useParams } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createCard, readDeck } from \"./utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const initialState = {\n    front: \"\",\n    back: \"\"\n  };\n  const [newCard, setNewCard] = useState(initialState);\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n\n      try {\n        const response = await readDeck(deckId, abortController.signal);\n        setDeck(response);\n      } catch (error) {\n        console.error('Something went wrong', error);\n      }\n\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, []);\n\n  function handleChange({\n    target\n  }) {\n    setNewCard({ ...newCard,\n      [target.name]: target.value\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    const response = await createCard({ ...newCard\n    }, abortController.signal);\n    history.go(0);\n    setNewCard(initialState);\n    return response;\n  }\n\n  async function handleDone() {\n    history.push(`/deck/${deckId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Front:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"front\",\n          name: \"front\",\n          onChange: handleChange,\n          type: \"text\",\n          value: newCard.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Back:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"back\",\n          name: \"back\",\n          onChange: handleChange,\n          type: \"text\",\n          value: newCard.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDone(),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCard, \"wI4cGyq6BjojlILGttpl2890jNs=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/AddCard.js"],"names":["React","useState","useEffect","useParams","Link","useHistory","createCard","readDeck","AddCard","deckId","history","initialState","front","back","newCard","setNewCard","deck","setDeck","fetchData","abortController","AbortController","response","signal","error","console","abort","handleChange","target","name","value","handleSubmit","event","preventDefault","go","handleDone","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useParams } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { createCard, readDeck } from \"./utils/api/index\"\n\nfunction AddCard () {\n    const {deckId} = useParams()\n    const history = useHistory()\n    const initialState = {\n        front: \"\",\n        back: \"\",\n    }\n\n    const [newCard, setNewCard] = useState(initialState)\n    const [deck, setDeck] = useState({})\n\n    useEffect(() => {\n     async function fetchData() {\n            const abortController = new AbortController()\n            try {\n            const response = await readDeck(deckId, abortController.signal)\n            setDeck(response)\n            } catch (error) {\n                console.error('Something went wrong', error)\n            }\n            return() => {\n                abortController.abort()\n            }\n        }\n        fetchData()\n    }, [])\n    \n    function handleChange({target}) {\n        setNewCard({\n            ...newCard,\n            [target.name]: target.value\n        })\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault()\n        const abortController = new AbortController()\n        const response = await createCard({...newCard}, abortController.signal)\n        history.go(0)\n        setNewCard(initialState)\n        return response\n    }\n\n    async function handleDone() {\n        history.push(`/deck/${deckId}`)\n    }\n\n\n    return (\n        <div>\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\n                <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\n                <li className=\"breadcrumb-item active\">New</li>\n            </ol>\n            <form onSubmit={handleSubmit}>\n                <h1>Create Deck</h1>\n                <label>\n                    Front:\n                    <textarea \n                        id=\"front\"\n                        name=\"front\"\n                        onChange={handleChange} \n                        type=\"text\"\n                        value={newCard.front}\n                    />\n                </label>\n                <label>\n                    Back:\n                    <textarea \n                        id=\"back\"\n                        name=\"back\"\n                        onChange={handleChange} \n                        type=\"text\"\n                        value={newCard.back}\n                    />\n                </label>\n                <button onClick={() => handleDone()}>Done</button>\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddCard"]},"metadata":{},"sourceType":"module"}