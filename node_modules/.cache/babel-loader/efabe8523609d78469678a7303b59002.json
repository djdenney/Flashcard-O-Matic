{"ast":null,"code":"var _jsxFileName = \"/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { listDecks, listCards, deleteDeck } from \"./utils/api/index\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const history = useHistory();\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n\n      try {\n        const deckResponse = await listDecks(abortController.signal);\n        setDecks(deckResponse);\n        decks.map((deck, index) => {\n          const cardCount = getCardCount(deck);\n          decks[index].count = cardCount;\n        });\n      } catch (error) {\n        console.error('Something went wrong', error);\n      }\n\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, []);\n\n  async function getCardCount(deck) {\n    const cards = await listCards(deck.id);\n    const cardCount = cards.length;\n    return cardCount;\n  }\n\n  async function handleDelete(deck) {\n    if (window.confirm(`Delete this deck? You will not be able to recover it`)) {\n      history.go(0);\n      return await deleteDeck(deck.id);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-secondary\",\n      to: \"/decks/new\",\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-deck\",\n      children: decks.map(deck => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            width: '30rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title\",\n              children: `${deck.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-subtitle mb-2 text-muted\",\n              children: `${deck.count} cards`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: `${deck.description}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"btn btn-secondary\",\n              to: `/decks/${deck.id}`,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"btn btn-primary\",\n              to: `/decks/${deck.id}/study`,\n              children: \"Study\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: () => handleDelete(deck),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, `${deck.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"nVZ+uN85oziZ7WQcZF1a5kYvNCA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Home.js"],"names":["React","useState","useEffect","listDecks","listCards","deleteDeck","Link","useHistory","Home","history","decks","setDecks","fetchData","abortController","AbortController","deckResponse","signal","map","deck","index","cardCount","getCardCount","count","error","console","abort","cards","id","length","handleDelete","window","confirm","go","width","name","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { listDecks, listCards, deleteDeck } from \"./utils/api/index\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nfunction Home () {\n    const history = useHistory()\n    const [decks, setDecks] = useState([])\n    \n    useEffect (() => {\n        async function fetchData() {\n            const abortController = new AbortController()\n            try {\n                const deckResponse = await listDecks(abortController.signal)\n                setDecks(deckResponse)\n                decks.map((deck, index) => {\n                    const cardCount = getCardCount(deck)\n                    decks[index].count = cardCount\n                })\n            } catch (error) {\n                console.error('Something went wrong', error)\n            }\n            return() => {\n                abortController.abort()\n            }\n        }\n        fetchData()\n    }, [])\n\n    async function getCardCount(deck) {\n        const cards = await listCards(deck.id)\n        const cardCount = cards.length\n        return cardCount\n    }\n\n    async function handleDelete(deck) {\n        if (window.confirm(`Delete this deck? You will not be able to recover it`)) {\n            history.go(0)\n            return await deleteDeck(deck.id)\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <Link className=\"btn btn-secondary\" to=\"/decks/new\">\n                Create Deck\n            </Link>\n            <div className=\"card-deck\">\n                {decks.map((deck) => {\n                    return (\n                        <div className=\"card\" style={{ width: '30rem'}} key={`${deck.id}`}>\n                            <div className=\"card-body\">\n                                <div className=\"card-title\">\n                                    {`${deck.name}`}\n                                </div>\n                                <div className=\"card-subtitle mb-2 text-muted\">\n                                    {`${deck.count} cards`}\n                                </div>\n                                <div className=\"card-text\">\n                                    {`${deck.description}`}\n                                </div>\n                                <Link className=\"btn btn-secondary\" to={`/decks/${deck.id}`}>\n                                    View\n                                </Link>\n                                <Link className=\"btn btn-primary\" to={`/decks/${deck.id}/study`}>\n                                    Study\n                                </Link>\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => handleDelete(deck)}>Delete</button>\n                             </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n       \n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}