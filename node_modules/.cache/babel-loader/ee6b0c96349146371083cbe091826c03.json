{"ast":null,"code":"var _jsxFileName = \"/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { listCards, readDeck, readCard } from \"./utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const [cardNumber, setCardNumber] = useState(1);\n  const [front, isFront] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n      const response = await readDeck(deckId, abortController.signal);\n      setDeck(response);\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n      const response = await listCards(deckId, abortController.signal);\n      setCards(response);\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, [deckId]);\n\n  function nextCard(index, total) {\n    console.log(index);\n\n    if (index < total) {\n      setCardNumber(cardNumber + 1);\n      isFront(true);\n    } else {\n      if (window.confirm(`Restart cards? Click 'cancel' to return to the home page`)) {\n        setCardNumber(1);\n        isFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  function flipCard() {\n    if (front) {\n      isFront(false);\n    } else {\n      isFront(true);\n    }\n  }\n\n  function enoughCards() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: cards.map((card, index) => {\n        if (index === cardNumber - 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title\",\n              children: `Card ${index + 1} of ${cards.length}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: front ? card.front : card.back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: flipCard,\n              className: \"btn btn-secondary\",\n              children: \"Flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => nextCard(index + 1, cards.length),\n              style: {\n                display: front ? \"none\" : \"\"\n              },\n              className: `btn btn-primary`,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n  function notEnoughCards() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text\",\n        children: [\"You need at least 3 cards to study. There are \", cards.length, \" cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/cards/new`,\n        className: \"btn btn-primary\",\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `Study: ${deck.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cards.length > 2 ? enoughCards() : notEnoughCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Study, \"+zvuEW8JHzcFlVTFg9Z4zPpPLG4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Study.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","listCards","readDeck","readCard","Study","deckId","deck","setDeck","cards","setCards","cardNumber","setCardNumber","front","isFront","history","fetchData","abortController","AbortController","response","signal","abort","nextCard","index","total","console","log","window","confirm","push","flipCard","enoughCards","map","card","length","back","display","notEnoughCards","id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport { listCards, readDeck, readCard } from \"./utils/api/index\"\n\n\nfunction Study () {\n    const {deckId} = useParams()\n    const [deck, setDeck] = useState({})\n    const [cards, setCards] = useState([])\n    const [cardNumber, setCardNumber] = useState(1)\n    const [front, isFront] = useState(true)\n    const history = useHistory()\n\n    useEffect (() => {\n        async function fetchData() {\n            const abortController = new AbortController()\n            const response = await readDeck(deckId, abortController.signal)\n            setDeck(response)\n            return() => {\n                abortController.abort()\n            }\n        }\n        fetchData()\n    }, [])\n\n    useEffect (() => {\n        async function fetchData() {\n            const abortController = new AbortController()\n            const response = await listCards(deckId, abortController.signal)\n            setCards(response)\n            return() => {\n                abortController.abort()\n            }\n        }\n        fetchData()\n    }, [deckId])\n\n    function nextCard(index, total) {\n        console.log(index)\n        if (index < total) {\n            setCardNumber(cardNumber + 1)\n            isFront(true)\n        } else {\n            if (window.confirm(`Restart cards? Click 'cancel' to return to the home page`)) {\n                setCardNumber(1)\n                isFront(true)\n            } else {\n                history.push(\"/\")\n            }\n        }\n    }\n\n    function flipCard() {\n        if (front) {\n            isFront(false)\n        } else {\n            isFront(true)\n        }\n    }\n\n    function enoughCards() {\n        return (\n            <div className=\"card\">\n                {cards.map((card, index) => {\n                    if (index === cardNumber - 1) {\n                        return (\n                            <div className=\"card-body\">\n                                <div className=\"card-title\">\n                                    {`Card ${index + 1} of ${cards.length}`}\n                                </div>\n                                <div className=\"card-text\">\n                                    {front ? card.front : card.back}\n                                </div>\n                                    <a onClick={flipCard} className=\"btn btn-secondary\">\n                                        Flip\n                                    </a>\n                                    <a onClick={() => nextCard(index + 1, cards.length)} style={{display: front ? \"none\" : \"\"}}className={`btn btn-primary`}>\n                                        Next\n                                    </a>\n                            </div>\n                        )\n                    }\n                })}\n            </div>\n        )\n    }\n\n    function notEnoughCards() {\n        return (\n            <div className=\"card-body\">\n                <div className=\"card-title\">\n                    Not enough cards.\n                </div>\n                <div className=\"card-text\">\n                    You need at least 3 cards to study. There are {cards.length} cards in this deck.\n                </div>\n                <Link to={`/decks/${deck.id}/cards/new`} className=\"btn btn-primary\">\n                    Add Cards\n                </Link>\n            </div>\n        )\n    }\n    \n    return (\n        <div>\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\n                <li className=\"breadcrumb-item\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\n                <li className=\"breadcrumb-item active\">Study</li>\n            </ol>\n            <div>\n                <h2>{`Study: ${deck.name}`}</h2>\n                <div>{cards.length > 2 ? enoughCards() : notEnoughCards()}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Study"]},"metadata":{},"sourceType":"module"}