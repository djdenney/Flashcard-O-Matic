{"ast":null,"code":"var _jsxFileName = \"/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, listCards } from \"./utils/api/index\";\n/**\n * \n * @returns \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n\n      try {\n        const deckResponse = await readDeck(deckId, abortController.signal);\n        const cardsResponse = await listCards(deckId, abortController.signal);\n        setDeck(deckResponse);\n        setCards(cardsResponse);\n      } catch (error) {\n        console.error('Something went wrong', error);\n      }\n\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n      setCards(response);\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        children: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Deck, \"8/NsCXumADyf/SJqlQaFCFh5PwA=\", false, function () {\n  return [useParams];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/danieldenney/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Deck.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","readDeck","listCards","Deck","deckId","deck","setDeck","cards","setCards","fetchData","abortController","AbortController","deckResponse","signal","cardsResponse","error","console","abort","response","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,IAAT,GAAiB;AAAA;;AACb,QAAM;AAACC,IAAAA;AAAD,MAAWL,SAAS,EAA1B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeY,SAAf,GAA2B;AACvB,YAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,UAAI;AACJ,cAAMC,YAAY,GAAG,MAAMX,QAAQ,CAACG,MAAD,EAASM,eAAe,CAACG,MAAzB,CAAnC;AACA,cAAMC,aAAa,GAAG,MAAMZ,SAAS,CAACE,MAAD,EAASM,eAAe,CAACG,MAAzB,CAArC;AACAP,QAAAA,OAAO,CAACM,YAAD,CAAP;AACAJ,QAAAA,QAAQ,CAACM,aAAD,CAAR;AACC,OALD,CAKE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACH;;AACD,aAAM,MAAM;AACRL,QAAAA,eAAe,CAACO,KAAhB;AACH,OAFD;AAGH;;AACDR,IAAAA,SAAS;AACZ,GAhBQ,EAgBN,EAhBM,CAAT;AAkBAZ,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeY,SAAf,GAA2B;AACvB,YAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAH,MAAAA,QAAQ,CAACU,QAAD,CAAR;AACA,aAAM,MAAM;AACRR,QAAAA,eAAe,CAACO,KAAhB;AACH,OAFD;AAGH;;AACDR,IAAAA,SAAS;AACZ,GATQ,EASN,EATM,CAAT;AAaA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,+BAAgC,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,kBAAwCJ,IAAI,CAACc;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBACKd,IAAI,CAACc;AADV;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAA,gBACKd,IAAI,CAACe;AADV;AAAA;AAAA;AAAA;AAAA,YARJ,eAWI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GArDQjB,I;UACYJ,S;;;KADZI,I;AAuDT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport { Link, useParams, useHistory } from \"react-router-dom\"\nimport { readDeck, listCards } from \"./utils/api/index\"\n\n/**\n * \n * @returns \n */\nfunction Deck () {\n    const {deckId} = useParams()\n    const [deck, setDeck] = useState({})\n    const [cards, setCards] = useState([])\n\n    useEffect (() => {\n        async function fetchData() {\n            const abortController = new AbortController()\n            try {\n            const deckResponse = await readDeck(deckId, abortController.signal)\n            const cardsResponse = await listCards(deckId, abortController.signal)\n            setDeck(deckResponse)\n            setCards(cardsResponse)\n            } catch (error) {\n                console.error('Something went wrong', error)\n            }\n            return() => {\n                abortController.abort()\n            }\n        }\n        fetchData()\n    }, [])\n\n    useEffect (() => {\n        async function fetchData() {\n            const abortController = new AbortController()\n            setCards(response)\n            return() => {\n                abortController.abort()\n            }\n        }\n        fetchData()\n    }, [])\n\n    \n\n    return (\n        <div>\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\n                <li className=\"breadcrumb-item active\">{deck.name}</li>\n            </ol>\n            <h2>\n                {deck.name}\n            </h2>\n            <p>\n                {deck.description}\n            </p>\n            <button className=\"btn btn-secondary\">\n                Edit\n            </button>\n        </div>\n    )\n}\n\nexport default Deck"]},"metadata":{},"sourceType":"module"}